{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///medium-editor-insert.min.js","webpack:///webpack/bootstrap f52f042df82ecd31d0c3","webpack:///./src/js/Plugin.js","webpack:///./src/js/utils.js","webpack:///./src/js/Core.js","webpack:///./src/js/Toolbar.js","webpack:///./src/js/ToolbarButton.js","webpack:///./src/js/addons/Embeds.js","webpack:///./src/js/addons/Images.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Core","_Core2","MediumEditorInsert","MediumEditor","Extension","extend","name","addons","images","embeds","_initializedAddons","init","prototype","apply","arguments","core","destroy","removeButtons","getCore","getAddons","getAddon","utils","ucfirst","str","charAt","toUpperCase","slice","generateRandomString","length","undefined","Math","random","toString","substr","getClosestWithClassName","el","className","util","traverseUp","element","classList","contains","isChildOf","parent","getElementsByClassName","parents","results","Array","forEach","editor","elements","push","getElementsByTagName","tagName","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_utils","_utils2","_Images","_Images2","_Embeds","_Embeds2","Core","plugin","_plugin","_editor","base","initAddons","addButtons","events","_this","addonActions","on","document","toggleButtons","bind","buttons","toggleAddons","action","handleAddonClick","window","positionButtons","_this2","keys","addonOptions","console","error","html","createElement","getEditorId","add","setAttribute","addon","label","innerHTML","body","appendChild","remove","elPosition","addonButton","addonsStyle","addonButtonStyle","position","getSelectedParentElement","getBoundingClientRect","getComputedStyle","top","scrollY","left","scrollX","parseInt","marginLeft","style","shouldDisplayButtonsOnElement","selectElement","showButtons","hideButtons","addonClassNames","isAddon","belongsToEditor","innerText","trim","getEditorElements","addonName","elementClassName","selectedElement","toggle","e","currentTarget","getAttribute","preventDefault","handleClick","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_ToolbarButton","_ToolbarButton2","MediumEditorToolbar","extensions","toolbar","Toolbar","_MediumEditorToolbar","options","getPrototypeOf","type","buttonOptions","button","assign","static","relativeContainer","createToolbarButtons","forEachExtension","extension","hasForm","getForm","attachEventHandlers","ul","li","btn","buttonName","buttonOpts","display","addBuiltInExtension","getButton","isElement","querySelectorAll","firstButtonClass","lastButtonClass","_this3","activeElements","preventSelectionUpdates","setTimeout","activeClassName","hideToolbar","showAndUpdateToolbar","container","anchorPreview","showToolbar","positionStaticToolbar","getExtensionByName","hidePreview","ToolbarButton","onClick","Embeds","placeholder","oembedProxy","captions","captionPlaceholder","storeMeta","styles","wide","right","actions","clicked","parseOnPaste","instanceHandlePaste","handlePaste","instanceHandleKeyDown","handleKeyDown","handleBlur","focus","evt","which","cancelEmbed","pastedUrl","clipboardData","getData","linkRegEx","RegExp","test","parseUrl","log","url","pasted","join","replace","embed","figure","figureCaption","metacontainer","overlay","replaceWith","indexOf","FB","XFBML","parse","removeAttribute","hidePlaceholder","off","instanceHandleKeyUp","_Toolbar","_Toolbar2","Images","preview","uploadUrl","deleteUrl","deleteMethod","deleteData","loadingClassName","descriptionContainerClassName","descriptionClassName","descriptionPlaceholder","initToolbar","unselectImage","removeImage","selectImage","onInsertButtonClick","uid","imageUrl","insertImage","_input","multiple","uploadFiles","click","changeAlign","files","file","upload","_this4","reader","FileReader","onload","result","readAsDataURL","xhr","XMLHttpRequest","data","FormData","open","onreadystatechange","readyState","status","responseText","append","send","isLoader","paragraph","nodeName","toLowerCase","div","parentNode","insertBefore","image","querySelector","replaceImage","addImage","img","descriptionContainer","description","domImage","alt","contentEditable","dataset","match","src","Image","_this5","clickedImage","_this6","keyCode","BACKSPACE","DELETE","selection","getSelection","selectedHtml","rangeCount","range","getSelectionRange","focusedElement","caretPosition","getCaretOffsets","sibling","previousElementSibling","nextElementSibling","newImages","getSelectionHtml","temp","wrappers","wrapper","deleteFile","childElementCount","next","prev","moveCursor","lastChild","textContent"],"mappings":"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","file":"medium-editor-insert.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediumEditorInsert\"] = factory();\n\telse\n\t\troot[\"MediumEditorInsert\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediumEditorInsert\"] = factory();\n\telse\n\t\troot[\"MediumEditorInsert\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Core = __webpack_require__(2);\n\t\n\tvar _Core2 = _interopRequireDefault(_Core);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar MediumEditorInsert = MediumEditor.Extension.extend({\n\t    name: 'insert',\n\t\n\t    addons: {\n\t        images: true,\n\t        embeds: true\n\t    },\n\t\n\t    _initializedAddons: {},\n\t\n\t    init: function init() {\n\t        MediumEditor.Extension.prototype.init.apply(this, arguments);\n\t\n\t        this.core = new _Core2.default(this);\n\t    },\n\t\n\t    destroy: function destroy() {\n\t        this.core.removeButtons();\n\t    },\n\t\n\t    getCore: function getCore() {\n\t        return this.core;\n\t    },\n\t\n\t    getAddons: function getAddons() {\n\t        return this._initializedAddons;\n\t    },\n\t\n\t    getAddon: function getAddon(name) {\n\t        return this._initializedAddons[name];\n\t    }\n\t});\n\t\n\texports.default = MediumEditorInsert;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar utils = {\n\t    ucfirst: function ucfirst(str) {\n\t        return str.charAt(0).toUpperCase() + str.slice(1);\n\t    },\n\t\n\t    generateRandomString: function generateRandomString() {\n\t        var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15;\n\t\n\t        return Math.random().toString(36).substr(2, length);\n\t    },\n\t\n\t    getClosestWithClassName: function getClosestWithClassName(el, className) {\n\t        return MediumEditor.util.traverseUp(el, function (element) {\n\t            return element.classList.contains(className);\n\t        });\n\t    },\n\t\n\t    isChildOf: function isChildOf(el, parent) {\n\t        return MediumEditor.util.traverseUp(el, function (element) {\n\t            return element === parent;\n\t        }) ? true : false;\n\t    },\n\t\n\t    getElementsByClassName: function getElementsByClassName(parents, className) {\n\t        var results = [];\n\t\n\t        Array.prototype.forEach.call(parents, function (editor) {\n\t            var elements = editor.getElementsByClassName(className);\n\t\n\t            Array.prototype.forEach.call(elements, function (element) {\n\t                results.push(element);\n\t            });\n\t        });\n\t\n\t        return results;\n\t    },\n\t\n\t    getElementsByTagName: function getElementsByTagName(parents, tagName) {\n\t        var results = [];\n\t\n\t        Array.prototype.forEach.call(parents, function (editor) {\n\t            var elements = editor.getElementsByTagName(tagName);\n\t\n\t            Array.prototype.forEach.call(elements, function (element) {\n\t                results.push(element);\n\t            });\n\t        });\n\t\n\t        return results;\n\t    }\n\t};\n\t\n\texports.default = utils;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _Images = __webpack_require__(6);\n\t\n\tvar _Images2 = _interopRequireDefault(_Images);\n\t\n\tvar _Embeds = __webpack_require__(5);\n\t\n\tvar _Embeds2 = _interopRequireDefault(_Embeds);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Core = function () {\n\t    function Core(plugin) {\n\t        _classCallCheck(this, Core);\n\t\n\t        this._plugin = plugin;\n\t        this._editor = this._plugin.base;\n\t\n\t        this.initAddons();\n\t        this.addButtons();\n\t        this.events();\n\t    }\n\t\n\t    _createClass(Core, [{\n\t        key: 'events',\n\t        value: function events() {\n\t            var _this = this;\n\t\n\t            var addonActions = void 0;\n\t\n\t            // This could be chained when medium-editor 5.15.2 is released\n\t            // https://github.com/yabwe/medium-editor/pull/1046\n\t            this._plugin.on(document, 'click', this.toggleButtons.bind(this));\n\t            this._plugin.on(document, 'keyup', this.toggleButtons.bind(this));\n\t            this._plugin.on(this.buttons.getElementsByClassName('medium-editor-insert-buttons-show')[0], 'click', this.toggleAddons.bind(this));\n\t\n\t            // This could be written in one statement when medium-editor 5.15.2 is released\n\t            // https://github.com/yabwe/medium-editor/pull/1046\n\t            addonActions = this.buttons.getElementsByClassName('medium-editor-insert-action');\n\t            Array.prototype.forEach.call(addonActions, function (action) {\n\t                _this._plugin.on(action, 'click', _this.handleAddonClick.bind(_this));\n\t            });\n\t\n\t            this._plugin.on(window, 'resize', this.positionButtons.bind(this));\n\t        }\n\t    }, {\n\t        key: 'initAddons',\n\t        value: function initAddons() {\n\t            var _this2 = this;\n\t\n\t            // Initialize all default addons, we'll delete ones we don't need later\n\t            this._plugin._initializedAddons = {\n\t                images: new _Images2.default(this._plugin, this._plugin.addons.images),\n\t                embeds: new _Embeds2.default(this._plugin, this._plugin.addons.embeds)\n\t            };\n\t\n\t            Object.keys(this._plugin.addons).forEach(function (name) {\n\t                var addonOptions = _this2._plugin.addons[name];\n\t\n\t                // If the addon is custom one\n\t                if (!_this2._plugin._initializedAddons[name]) {\n\t                    if (typeof addonOptions === 'function') {\n\t                        _this2._plugin._initializedAddons[name] = new addonOptions(_this2._plugin);\n\t                    } else {\n\t                        window.console.error('I don\\'t know how to initialize custom \"' + name + '\" addon!');\n\t                    }\n\t                }\n\t\n\t                // Delete disabled addon\n\t                if (!addonOptions) {\n\t                    delete _this2._plugin._initializedAddons[name];\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'addButtons',\n\t        value: function addButtons() {\n\t            var addons = this._plugin.getAddons();\n\t            var html = void 0;\n\t\n\t            this.buttons = document.createElement('div');\n\t            this.buttons.id = 'medium-editor-insert-' + this._plugin.getEditorId();\n\t            this.buttons.classList.add('medium-editor-insert-buttons');\n\t            this.buttons.setAttribute('contentediable', false);\n\t\n\t            html = '<a class=\"medium-editor-insert-buttons-show\">+</a>\\n            <ul class=\"medium-editor-insert-buttons-addons\">';\n\t\n\t            Object.keys(addons).forEach(function (name) {\n\t                var addon = addons[name];\n\t\n\t                html += '<li><a class=\"medium-editor-insert-action\" data-addon=\"' + name + '\">' + addon.label + '</a></li>';\n\t            });\n\t\n\t            html += '</ul>';\n\t\n\t            this.buttons.innerHTML = html;\n\t\n\t            document.body.appendChild(this.buttons);\n\t        }\n\t    }, {\n\t        key: 'removeButtons',\n\t        value: function removeButtons() {\n\t            this.buttons.remove();\n\t        }\n\t    }, {\n\t        key: 'positionButtons',\n\t        value: function positionButtons() {\n\t            var el = void 0,\n\t                elPosition = void 0,\n\t                addons = void 0,\n\t                addonButton = void 0,\n\t                addonsStyle = void 0,\n\t                addonButtonStyle = void 0,\n\t                position = void 0;\n\t\n\t            // Don't position buttons if they aren't active\n\t            if (this.buttons.classList.contains('medium-editor-insert-buttons-active') === false) {\n\t                return;\n\t            }\n\t\n\t            el = this._editor.getSelectedParentElement();\n\t            elPosition = el.getBoundingClientRect();\n\t            addons = this.buttons.getElementsByClassName('medium-editor-insert-buttons-addons')[0];\n\t            addonButton = this.buttons.getElementsByClassName('medium-editor-insert-action')[0];\n\t            addonsStyle = window.getComputedStyle(addons);\n\t            addonButtonStyle = window.getComputedStyle(addonButton);\n\t\n\t            // Calculate position\n\t            position = {\n\t                top: window.scrollY + elPosition.top,\n\t                left: window.scrollX + elPosition.left - parseInt(addonsStyle.left, 10) - parseInt(addonButtonStyle.marginLeft, 10)\n\t            };\n\t\n\t            // If left position is lower than 0, the buttons would be out of the viewport.\n\t            // In that case, align buttons with the editor\n\t            position.left = position.left < 0 ? elPosition.left : position.left;\n\t\n\t            this.buttons.style.left = position.left + 'px';\n\t            this.buttons.style.top = position.top + 'px';\n\t        }\n\t    }, {\n\t        key: 'toggleButtons',\n\t        value: function toggleButtons() {\n\t            var el = this._editor.getSelectedParentElement();\n\t\n\t            if (this.shouldDisplayButtonsOnElement(el)) {\n\t                this.selectElement(el);\n\t                this.showButtons();\n\t            } else {\n\t                this.hideButtons();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'shouldDisplayButtonsOnElement',\n\t        value: function shouldDisplayButtonsOnElement(el) {\n\t            var addons = this._plugin.getAddons(),\n\t                addonClassNames = [];\n\t            var isAddon = false,\n\t                belongsToEditor = false;\n\t\n\t            // Don't show buttons when the element has text\n\t            if (el.innerText.trim() !== '') {\n\t                return false;\n\t            }\n\t\n\t            // Don't show buttons when the editor doesn't belong to editor\n\t            this._plugin.getEditorElements().forEach(function (editor) {\n\t                if (_utils2.default.isChildOf(el, editor)) {\n\t                    belongsToEditor = true;\n\t                    return;\n\t                }\n\t            });\n\t\n\t            if (!belongsToEditor) {\n\t                return false;\n\t            }\n\t\n\t            // Get class names used by addons\n\t            Object.keys(addons).forEach(function (addonName) {\n\t                var addon = addons[addonName];\n\t                if (addon.elementClassName) {\n\t                    addonClassNames.push(addon.elementClassName);\n\t                }\n\t            });\n\t\n\t            // Don't show buttons if the element is an addon element\n\t            // - when the element has an addon class, or some of its parents have it\n\t            addonClassNames.forEach(function (className) {\n\t                if (el.classList.contains(className) || _utils2.default.getClosestWithClassName(el, className)) {\n\t                    isAddon = true;\n\t                    return;\n\t                }\n\t            });\n\t\n\t            return !isAddon;\n\t        }\n\t    }, {\n\t        key: 'selectElement',\n\t        value: function selectElement(el) {\n\t            this.selectedElement = el;\n\t        }\n\t    }, {\n\t        key: 'showButtons',\n\t        value: function showButtons() {\n\t            this.buttons.classList.add('medium-editor-insert-buttons-active');\n\t            this.positionButtons();\n\t        }\n\t    }, {\n\t        key: 'hideButtons',\n\t        value: function hideButtons() {\n\t            this.buttons.classList.remove('medium-editor-insert-buttons-active');\n\t            this.buttons.classList.remove('medium-editor-insert-addons-active');\n\t        }\n\t    }, {\n\t        key: 'toggleAddons',\n\t        value: function toggleAddons() {\n\t            this.buttons.classList.toggle('medium-editor-insert-addons-active');\n\t        }\n\t    }, {\n\t        key: 'handleAddonClick',\n\t        value: function handleAddonClick(e) {\n\t            var name = e.currentTarget.getAttribute('data-addon');\n\t\n\t            e.preventDefault();\n\t\n\t            this._plugin.getAddon(name).handleClick(e);\n\t        }\n\t    }]);\n\t\n\t    return Core;\n\t}();\n\t\n\texports.default = Core;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _ToolbarButton = __webpack_require__(4);\n\t\n\tvar _ToolbarButton2 = _interopRequireDefault(_ToolbarButton);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MediumEditorToolbar = MediumEditor.extensions.toolbar;\n\t\n\tvar Toolbar = function (_MediumEditorToolbar) {\n\t    _inherits(Toolbar, _MediumEditorToolbar);\n\t\n\t    function Toolbar(options) {\n\t        _classCallCheck(this, Toolbar);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call(this, options));\n\t\n\t        _this.name = options.type + 'Toolbar';\n\t\n\t        options.buttons.forEach(function (buttonOptions) {\n\t            var button = new _ToolbarButton2.default(Object.assign({}, {\n\t                window: _this.plugin.window,\n\t                document: _this.plugin.document,\n\t                base: _this.plugin.base\n\t            }, buttonOptions));\n\t\n\t            button.init();\n\t            _this.plugin.base.extensions.push(button);\n\t        });\n\t\n\t        _this.window = options.plugin.window;\n\t        _this.document = options.plugin.document;\n\t        _this.base = options.plugin.base;\n\t\n\t        _this.init();\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Toolbar, [{\n\t        key: 'createToolbar',\n\t        value: function createToolbar() {\n\t            var toolbar = this.document.createElement('div');\n\t\n\t            toolbar.id = 'medium-editor-insert-' + this.type + '-toolbar-' + this.getEditorId();\n\t            toolbar.className = 'medium-editor-toolbar';\n\t\n\t            if (this.static) {\n\t                toolbar.className += ' static-toolbar';\n\t            } else if (this.relativeContainer) {\n\t                toolbar.className += ' medium-editor-relative-toolbar';\n\t            } else {\n\t                toolbar.className += ' medium-editor-stalker-toolbar';\n\t            }\n\t\n\t            toolbar.appendChild(this.createToolbarButtons());\n\t\n\t            // Add any forms that extensions may have\n\t            this.forEachExtension(function (extension) {\n\t                if (extension.hasForm) {\n\t                    toolbar.appendChild(extension.getForm());\n\t                }\n\t            });\n\t\n\t            this.attachEventHandlers();\n\t\n\t            return toolbar;\n\t        }\n\t    }, {\n\t        key: 'createToolbarButtons',\n\t        value: function createToolbarButtons() {\n\t            var _this2 = this;\n\t\n\t            var ul = this.document.createElement('ul');\n\t            var li = void 0,\n\t                btn = void 0,\n\t                buttons = void 0,\n\t                extension = void 0,\n\t                buttonName = void 0,\n\t                buttonOpts = void 0;\n\t\n\t            ul.id = 'medium-editor-insert-' + this.type + '-toolbar-actions' + this.getEditorId();\n\t            ul.className = 'medium-editor-toolbar-actions';\n\t            ul.style.display = 'block';\n\t\n\t            this.buttons.forEach(function (button) {\n\t                if (typeof button === 'string') {\n\t                    buttonName = button;\n\t                    buttonOpts = null;\n\t                } else {\n\t                    buttonName = button.name;\n\t                    buttonOpts = button;\n\t                }\n\t\n\t                // If the button already exists as an extension, it'll be returned\n\t                // othwerise it'll create the default built-in button\n\t                extension = _this2.base.addBuiltInExtension(buttonName, buttonOpts);\n\t\n\t                if (extension && typeof extension.getButton === 'function') {\n\t                    btn = extension.getButton(_this2.base);\n\t                    li = _this2.document.createElement('li');\n\t                    if (MediumEditor.util.isElement(btn)) {\n\t                        li.appendChild(btn);\n\t                    } else {\n\t                        li.innerHTML = btn;\n\t                    }\n\t                    ul.appendChild(li);\n\t                }\n\t            }, this);\n\t\n\t            buttons = ul.querySelectorAll('button');\n\t            if (buttons.length > 0) {\n\t                buttons[0].classList.add(this.firstButtonClass);\n\t                buttons[buttons.length - 1].classList.add(this.lastButtonClass);\n\t            }\n\t\n\t            return ul;\n\t        }\n\t    }, {\n\t        key: 'checkState',\n\t        value: function checkState() {\n\t            var _this3 = this;\n\t\n\t            var activeElements = void 0;\n\t\n\t            if (this.base.preventSelectionUpdates) {\n\t                return;\n\t            }\n\t\n\t            // Wait for elements to be selected\n\t            setTimeout(function () {\n\t                activeElements = _utils2.default.getElementsByClassName(_this3.getEditorElements(), _this3.activeClassName);\n\t\n\t                // Hide toolbar when no elements are selected\n\t                if (activeElements.length === 0) {\n\t                    return _this3.hideToolbar();\n\t                }\n\t\n\t                // Now we know there's a focused editable with a selection\n\t                _this3.showAndUpdateToolbar();\n\t            }, 10);\n\t        }\n\t    }, {\n\t        key: 'setToolbarPosition',\n\t        value: function setToolbarPosition() {\n\t            var container = _utils2.default.getElementsByClassName(this.getEditorElements(), this.activeClassName)[0];\n\t            var anchorPreview = void 0;\n\t\n\t            // If there isn't a valid selection, bail\n\t            if (!container) {\n\t                return this;\n\t            }\n\t\n\t            this.showToolbar();\n\t            this.positionStaticToolbar(container);\n\t\n\t            anchorPreview = this.base.getExtensionByName('anchor-preview');\n\t\n\t            if (anchorPreview && typeof anchorPreview.hidePreview === 'function') {\n\t                anchorPreview.hidePreview();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Toolbar;\n\t}(MediumEditorToolbar);\n\t\n\texports.default = Toolbar;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar ToolbarButton = MediumEditor.extensions.button.extend({\n\t    init: function init() {\n\t        this.button = this.document.createElement('button');\n\t        this.button.classList.add('medium-editor-action');\n\t        this.button.innerHTML = '<b>' + this.label + '</b>';\n\t\n\t        this.on(this.button, 'click', this.handleClick.bind(this));\n\t    },\n\t\n\t    getButton: function getButton() {\n\t        return this.button;\n\t    },\n\t\n\t    handleClick: function handleClick() {\n\t        this.onClick();\n\t    }\n\t});\n\t\n\texports.default = ToolbarButton;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Embeds = function () {\n\t  function Embeds(plugin, options) {\n\t    _classCallCheck(this, Embeds);\n\t\n\t    this._plugin = plugin;\n\t    this._editor = this._plugin.base;\n\t\n\t    this.options = {\n\t      label: '<span class=\"fa fa-youtube-play\"></span>',\n\t      placeholder: 'Paste a YouTube, Vimeo, Facebook, Twitter or Instagram link and press Enter',\n\t      oembedProxy: 'http://medium.iframe.ly/api/oembed?iframe=1',\n\t      captions: true,\n\t      captionPlaceholder: 'Type caption (optional)',\n\t      storeMeta: false,\n\t      styles: {\n\t        wide: {\n\t          label: '<span class=\"fa fa-align-justify\"></span>'\n\t          // added: function ($el) {},\n\t          // removed: function ($el) {}\n\t        },\n\t        left: {\n\t          label: '<span class=\"fa fa-align-left\"></span>'\n\t          // added: function ($el) {},\n\t          // removed: function ($el) {}\n\t        },\n\t        right: {\n\t          label: '<span class=\"fa fa-align-right\"></span>'\n\t          // added: function ($el) {},\n\t          // removed: function ($el) {}\n\t        }\n\t      },\n\t      actions: {\n\t        remove: {\n\t          label: '<span class=\"fa fa-times\"></span>',\n\t          clicked: function clicked() {\n\t            // var $event = $.Event('keydown');\n\t\n\t            // $event.which = 8;\n\t            // $(document).trigger($event);\n\t          }\n\t        }\n\t      },\n\t      parseOnPaste: false\n\t    };\n\t\n\t    Object.assign(this.options, options);\n\t\n\t    this.label = this.options.label;\n\t  }\n\t\n\t  _createClass(Embeds, [{\n\t    key: 'handleClick',\n\t    value: function handleClick() {\n\t      this.el = this._plugin.getCore().selectedElement;\n\t      this.el.classList.add('medium-editor-insert-embeds-active');\n\t      this.el.classList.add('medium-editor-insert-embeds-placeholder');\n\t      this.el.setAttribute('data-placeholder', this.options.placeholder);\n\t\n\t      this.instanceHandlePaste = this.handlePaste.bind(this);\n\t      this.instanceHandleKeyDown = this.handleKeyDown.bind(this);\n\t\n\t      this._plugin.on(document, 'paste', this.instanceHandlePaste);\n\t      this._plugin.on(document, 'keydown', this.instanceHandleKeyDown);\n\t      this._plugin.on(this.el, 'blur', this.handleBlur.bind(this));\n\t\n\t      this._plugin.getCore().hideButtons();\n\t\n\t      // return focus to element, allow user to cancel embed by start writing\n\t      this._editor.elements[0].focus();\n\t      this.el.focus();\n\t\n\t      // this._editor.selectElement(this.el);\n\t      // console.log( this._editor.selection );\n\t    }\n\t  }, {\n\t    key: 'handleKeyDown',\n\t    value: function handleKeyDown(evt) {\n\t      if (evt.which !== 17 && evt.which !== 91 && evt.which !== 224 // Cmd or Ctrl pressed (user probably preparing to paste url via hot keys)\n\t      && (evt.which === 27 || this._plugin.selectedElement !== this.el)) {\n\t        // Escape\n\t        this.cancelEmbed();\n\t        return false;\n\t      }\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'handlePaste',\n\t    value: function handlePaste(evt) {\n\t      var pastedUrl = evt.clipboardData.getData('text');\n\t      var linkRegEx = new RegExp('^(http(s?):)?\\/\\/', 'i');\n\t\n\t      if (linkRegEx.test(pastedUrl)) {\n\t        var html = this.parseUrl(pastedUrl, true);\n\t        console.log('yes!', html);\n\t        // if (this.options.oembedProxy) {\n\t        //     this.oembed(pastedUrl, true);\n\t        // } else {\n\t        //     this.parseUrl(pastedUrl, true);\n\t        // }\n\t      }\n\t\n\t      console.log('paste!');\n\t      // console.log( pastedUrl ); \n\t      this.cancelEmbed();\n\t    }\n\t\n\t    /**\n\t      * Get HTML using regexp\n\t      *\n\t      * @param {string} url\n\t      * @param {bool} pasted\n\t      * @return {void}\n\t      */\n\t\n\t  }, {\n\t    key: 'parseUrl',\n\t    value: function parseUrl(url, pasted) {\n\t      var html = void 0;\n\t\n\t      if (!new RegExp(['youtube', 'youtu.be', 'vimeo', 'instagram', 'twitter', 'facebook'].join('|')).test(url)) {\n\t        // $.proxy(this, 'convertBadEmbed', url)();\n\t        return false;\n\t      }\n\t\n\t      html = url.replace(/\\n?/g, '').replace(/^((http(s)?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/(watch\\?v=|v\\/)?)([a-zA-Z0-9\\-_]+)(.*)?$/, '<div class=\"video video-youtube\"><iframe width=\"420\" height=\"315\" src=\"//www.youtube.com/embed/$7\" frameborder=\"0\" allowfullscreen></iframe></div>').replace(/^https?:\\/\\/vimeo\\.com(\\/.+)?\\/([0-9]+)$/, '<div class=\"video video-vimeo\"><iframe src=\"//player.vimeo.com/video/$2\" width=\"500\" height=\"281\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></div>').replace(/^https:\\/\\/twitter\\.com\\/(\\w+)\\/status\\/(\\d+)\\/?$/, '<blockquote class=\"twitter-tweet\" align=\"center\" lang=\"en\"><a href=\"https://twitter.com/$1/statuses/$2\"></a></blockquote><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>').replace(/^(https:\\/\\/www\\.facebook\\.com\\/(.*))$/, '<script src=\"//connect.facebook.net/en_US/sdk.js#xfbml=1&amp;version=v2.2\" async></script><div class=\"fb-post\" data-href=\"$1\"><div class=\"fb-xfbml-parse-ignore\"><a href=\"$1\">Loading Facebook post...</a></div></div>').replace(/^https?:\\/\\/instagram\\.com\\/p\\/(.+)\\/?$/, '<span class=\"instagram\"><iframe src=\"//instagram.com/p/$1/embed/\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe></span>');\n\t\n\t      if (/<(\"[^\"]*\"|'[^']*'|[^'\">])*>/.test(html) === false) {\n\t        // $.proxy(this, 'convertBadEmbed', url)();\n\t        return false;\n\t      }\n\t\n\t      if (pasted) {\n\t        return this.embed(html, url);\n\t      } else {\n\t        return this.embed(html);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'embed',\n\t\n\t\n\t    /**\n\t     * Add html to page\n\t     *\n\t     * @param {string} html\n\t     * @param {string} pastedUrl\n\t     * @return {void}\n\t     */\n\t\n\t    value: function embed(html, pastedUrl) {\n\t      var el = void 0,\n\t          figure = void 0,\n\t          figureCaption = void 0,\n\t          metacontainer = void 0,\n\t          container = void 0,\n\t          overlay = void 0;\n\t\n\t      if (!html) {\n\t        console.error('Incorrect URL format specified: ', pastedUrl);\n\t        return false;\n\t      }\n\t\n\t      el = this._plugin.getCore().selectedElement;\n\t      figure = document.createElement('figure');\n\t      figure.classList.add('medium-editor-insert-embed');\n\t      figureCaption = document.createElement('figcaption');\n\t      figureCaption.classList.add('medium-editor-insert-embed-caption');\n\t      figureCaption.setAttribute('contenteditable', true);\n\t      figureCaption.setAttribute('data-placeholder', 'Type caption for embed (optional)');\n\t\n\t      metacontainer = document.createElement('div');\n\t      metacontainer.classList.add('medium-editor-insert-embeds');\n\t      metacontainer.setAttribute('contenteditable', false);\n\t\n\t      container = document.createElement('div');\n\t      container.classList.add('medium-editor-insert-embed-container');\n\t\n\t      overlay = document.createElement('div');\n\t      overlay.classList.add('medium-editor-insert-embeds-overlay');\n\t\n\t      metacontainer.appendChild(figure);\n\t      metacontainer.appendChild(overlay);\n\t      figure.appendChild(container);\n\t\n\t      el.replaceWith(metacontainer);\n\t\n\t      container.innerHTML = html;\n\t\n\t      console.log(html);\n\t      // this.core.triggerInput();\n\t\n\t      if (html.indexOf('facebook') !== -1) {\n\t        if (typeof FB !== 'undefined') {\n\t          setTimeout(function () {\n\t            FB.XFBML.parse();\n\t          }, 2000);\n\t        }\n\t      }\n\t\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'handleBlur',\n\t    value: function handleBlur() {\n\t      console.log('blur');\n\t      // this.cancelEmbed();\n\t    }\n\t  }, {\n\t    key: 'hidePlaceholder',\n\t    value: function hidePlaceholder() {\n\t      this.el.removeAttribute('data-placeholder');\n\t      this.el.classList.remove('medium-editor-insert-embeds-placeholder');\n\t    }\n\t  }, {\n\t    key: 'cancelEmbed',\n\t    value: function cancelEmbed() {\n\t      this.hidePlaceholder();\n\t      this.el.classList.remove('medium-editor-insert-embeds-active');\n\t\n\t      this._plugin.off(document, 'paste', this.instanceHandlePaste);\n\t      this._plugin.off(document, 'keyup', this.instanceHandleKeyUp);\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.cancelEmbed();\n\t    }\n\t  }]);\n\t\n\t  return Embeds;\n\t}();\n\t\n\texports.default = Embeds;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _Toolbar = __webpack_require__(3);\n\t\n\tvar _Toolbar2 = _interopRequireDefault(_Toolbar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Images = function () {\n\t    function Images(plugin, options) {\n\t        _classCallCheck(this, Images);\n\t\n\t        this.options = {\n\t            label: '<span class=\"fa fa-camera\"></span>',\n\t            preview: true,\n\t            uploadUrl: 'upload.php',\n\t            deleteUrl: 'delete.php',\n\t            deleteMethod: 'DELETE',\n\t            deleteData: {}\n\t        };\n\t\n\t        Object.assign(this.options, options);\n\t\n\t        this._plugin = plugin;\n\t        this._editor = this._plugin.base;\n\t        this.elementClassName = 'medium-editor-insert-images';\n\t        this.loadingClassName = 'medium-editor-insert-images-loading';\n\t        this.activeClassName = 'medium-editor-insert-image-active';\n\t        this.descriptionContainerClassName = 'medium-editor-embed-image-description-container';\n\t        this.descriptionClassName = 'medium-editor-embed-image-description';\n\t        this.label = this.options.label;\n\t        this.descriptionPlaceholder = this.options.descriptionPlaceholder;\n\t\n\t        this.initToolbar();\n\t        this.events();\n\t    }\n\t\n\t    _createClass(Images, [{\n\t        key: 'events',\n\t        value: function events() {\n\t            var _this = this;\n\t\n\t            this._plugin.on(document, 'click', this.unselectImage.bind(this));\n\t            this._plugin.on(document, 'keydown', this.removeImage.bind(this));\n\t\n\t            this._plugin.getEditorElements().forEach(function (editor) {\n\t                _this._plugin.on(editor, 'click', _this.selectImage.bind(_this));\n\t            });\n\t        }\n\t    }, {\n\t        key: 'handleClick',\n\t        value: function handleClick() {\n\t            var _this2 = this;\n\t\n\t            if (this.options.onInsertButtonClick) {\n\t                var uid = _utils2.default.generateRandomString();\n\t                this.options.onInsertButtonClick(function (imageUrl) {\n\t                    return _this2.insertImage(imageUrl, uid);\n\t                }, function (imageUrl) {\n\t                    return _this2.insertImage(imageUrl, uid, true);\n\t                });\n\t            } else {\n\t                this._input = document.createElement('input');\n\t                this._input.type = 'file';\n\t                this._input.multiple = true;\n\t                this._plugin.on(this._input, 'change', this.uploadFiles.bind(this));\n\t\n\t                this._input.click();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'initToolbar',\n\t        value: function initToolbar() {\n\t            this.toolbar = new _Toolbar2.default({\n\t                plugin: this._plugin,\n\t                type: 'images',\n\t                activeClassName: this.activeClassName,\n\t                buttons: [{\n\t                    name: 'align-left',\n\t                    action: 'left',\n\t                    label: 'Left',\n\t                    onClick: function () {\n\t                        this.changeAlign('align-left');\n\t                    }.bind(this)\n\t                }, {\n\t                    name: 'align-center',\n\t                    action: 'center',\n\t                    label: 'Center',\n\t                    onClick: function () {\n\t                        this.changeAlign('align-center');\n\t                    }.bind(this)\n\t                }, {\n\t                    name: 'align-right',\n\t                    action: 'right',\n\t                    label: 'Right',\n\t                    onClick: function () {\n\t                        this.changeAlign('align-right');\n\t                    }.bind(this)\n\t                }, {\n\t                    name: 'align-center-full',\n\t                    action: 'center-full',\n\t                    label: 'Center Full',\n\t                    onClick: function () {\n\t                        this.changeAlign('align-center-full');\n\t                    }.bind(this)\n\t                }]\n\t            });\n\t\n\t            this._editor.extensions.push(this.toolbar);\n\t        }\n\t    }, {\n\t        key: 'changeAlign',\n\t        value: function changeAlign(className) {\n\t            var el = this._plugin.getCore().selectedElement;\n\t            el.classList.remove('align-left', 'align-center', 'align-right', 'align-center-full');\n\t            el.classList.add(className);\n\t        }\n\t    }, {\n\t        key: 'uploadFiles',\n\t        value: function uploadFiles() {\n\t            var _this3 = this;\n\t\n\t            Array.prototype.forEach.call(this._input.files, function (file) {\n\t                // Generate uid for this image, so we can identify it later\n\t                // and we can replace preview image with uploaded one\n\t                var uid = _utils2.default.generateRandomString();\n\t\n\t                if (_this3.options.preview) {\n\t                    _this3.preview(file, uid);\n\t                }\n\t\n\t                _this3.upload(file, uid);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'preview',\n\t        value: function preview(file, uid) {\n\t            var _this4 = this;\n\t\n\t            var reader = new FileReader();\n\t\n\t            reader.onload = function (e) {\n\t                _this4.insertImage(e.target.result, uid);\n\t            };\n\t\n\t            reader.readAsDataURL(file);\n\t        }\n\t    }, {\n\t        key: 'upload',\n\t        value: function upload(file, uid) {\n\t            var xhr = new XMLHttpRequest(),\n\t                data = new FormData();\n\t            var insertImage = this.insertImage.bind(this);\n\t\n\t            xhr.open(\"POST\", this.options.uploadUrl, true);\n\t            xhr.onreadystatechange = function () {\n\t                if (xhr.readyState === 4 && xhr.status === 200) {\n\t                    insertImage(xhr.responseText, _utils2.default.generateRandomString());\n\t                }\n\t            };\n\t\n\t            data.append(\"file\", file);\n\t            xhr.send(data);\n\t        }\n\t    }, {\n\t        key: 'insertImage',\n\t        value: function insertImage(imageUrl, uid, isLoader) {\n\t            var paragraph = this._plugin.getCore().selectedElement;\n\t\n\t            // Replace paragraph with div, because figure is a block element\n\t            // and can't be nested inside paragraphs\n\t            if (paragraph.nodeName.toLowerCase() === 'p') {\n\t                var div = document.createElement('div');\n\t\n\t                paragraph.parentNode.insertBefore(div, paragraph);\n\t                this._plugin.getCore().selectElement(div);\n\t                paragraph.remove();\n\t            }\n\t            var image = this._plugin.getCore().selectedElement.querySelector('[data-uid=\"' + uid + '\"]');\n\t\n\t            if (image) {\n\t                this.replaceImage(image, imageUrl, isLoader);\n\t            } else {\n\t                this.addImage(imageUrl, uid, isLoader);\n\t            }\n\t\n\t            this._plugin.getCore().hideButtons();\n\t        }\n\t    }, {\n\t        key: 'addImage',\n\t        value: function addImage(url, uid, isLoader) {\n\t            var el = this._plugin.getCore().selectedElement,\n\t                figure = document.createElement('figure'),\n\t                img = document.createElement('img'),\n\t                descriptionContainer = document.createElement('div'),\n\t                description = document.createElement('figcaption');\n\t\n\t            var domImage = void 0;\n\t\n\t            img.alt = '';\n\t\n\t            if (uid) {\n\t                img.setAttribute('data-uid', uid);\n\t            }\n\t\n\t            descriptionContainer.classList.add(this.descriptionContainerClassName);\n\t            description.contentEditable = true;\n\t            description.classList.add(this.descriptionClassName);\n\t            description.dataset.placeholder = this.descriptionPlaceholder;\n\t\n\t            // If we're dealing with a preview image,\n\t            // we don't have to preload it before displaying\n\t            if (url.match(/^data:/)) {\n\t                img.src = url;\n\t                figure.appendChild(img);\n\t                el.appendChild(figure);\n\t            } else {\n\t                domImage = new Image();\n\t                domImage.onload = function () {\n\t                    img.src = domImage.src;\n\t                    figure.appendChild(img);\n\t                    descriptionContainer.appendChild(description);\n\t                    figure.appendChild(descriptionContainer);\n\t                    el.appendChild(figure);\n\t                };\n\t                domImage.src = url;\n\t                if (isLoader) el.classList.add(this.loadingClassName);\n\t            }\n\t\n\t            el.classList.add(this.elementClassName);\n\t            el.contentEditable = false;\n\t            el.classList.add('align-center');\n\t\n\t            // Return domImage so we can test this function easily\n\t            return domImage;\n\t        }\n\t    }, {\n\t        key: 'replaceImage',\n\t        value: function replaceImage(image, url, isLoader) {\n\t            var domImage = new Image();\n\t            var el = this._plugin.getCore().selectedElement;\n\t\n\t            if (!isLoader) el.classList.remove(this.loadingClassName);\n\t\n\t            domImage.onload = function () {\n\t                image.src = domImage.src;\n\t                image.removeAttribute('data-uid');\n\t            };\n\t\n\t            domImage.src = url;\n\t\n\t            // Return domImage so we can test this function easily\n\t            return domImage;\n\t        }\n\t    }, {\n\t        key: 'selectImage',\n\t        value: function selectImage(e) {\n\t            var el = e.target;\n\t\n\t            if (el.nodeName.toLowerCase() === 'img' && _utils2.default.getClosestWithClassName(el, this.elementClassName)) {\n\t                var parentNode = el.parentNode.parentNode;\n\t\n\t                if (!parentNode.classList.contains(this.loadingClassName)) {\n\t                    el.classList.add(this.activeClassName);\n\t                    parentNode.classList.add(this.activeClassName);\n\t\n\t                    this._editor.selectElement(el);\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'unselectImage',\n\t        value: function unselectImage(e) {\n\t            var _this5 = this;\n\t\n\t            var el = e.target;\n\t            var clickedImage = void 0,\n\t                images = void 0;\n\t\n\t            if (el.classList.contains(this.descriptionClassName)) return false;\n\t\n\t            // Unselect all selected images. If an image is clicked, unselect all except this one.\n\t            if (el.nodeName.toLowerCase() === 'img' && el.classList.contains(this.activeClassName)) {\n\t                clickedImage = el;\n\t            }\n\t\n\t            images = _utils2.default.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName);\n\t            Array.prototype.forEach.call(images, function (image) {\n\t                if (image !== clickedImage) {\n\t                    image.classList.remove(_this5.activeClassName);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'removeImage',\n\t        value: function removeImage(e) {\n\t            var _this6 = this;\n\t\n\t            if ([MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.DELETE].indexOf(e.which) > -1) {\n\t                var images = _utils2.default.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName),\n\t                    selection = window.getSelection();\n\t                var selectedHtml = void 0;\n\t\n\t                // Remove image even if it's not selected, but backspace/del is pressed in text\n\t                if (selection && selection.rangeCount) {\n\t                    var range = MediumEditor.selection.getSelectionRange(document),\n\t                        focusedElement = MediumEditor.selection.getSelectedParentElement(range),\n\t                        caretPosition = MediumEditor.selection.getCaretOffsets(focusedElement).left;\n\t                    var sibling = void 0;\n\t\n\t                    // Is backspace pressed and caret is at the beginning of a paragraph, get previous element\n\t                    if (e.which === MediumEditor.util.keyCode.BACKSPACE && caretPosition === 0) {\n\t                        sibling = focusedElement.previousElementSibling;\n\t                        // Is del pressed and caret is at the end of a paragraph, get next element\n\t                    } else if (e.which === MediumEditor.util.keyCode.DELETE && caretPosition === focusedElement.innerText.length) {\n\t                        sibling = focusedElement.nextElementSibling;\n\t                    }\n\t\n\t                    if (sibling && sibling.classList.contains('medium-editor-insert-images')) {\n\t                        var newImages = sibling.getElementsByTagName('img');\n\t                        Array.prototype.forEach.call(newImages, function (image) {\n\t                            images.push(image);\n\t                        });\n\t                    }\n\t\n\t                    // If text is selected, find images in the selection\n\t                    selectedHtml = MediumEditor.selection.getSelectionHtml(document);\n\t                    if (selectedHtml) {\n\t                        var temp = document.createElement('div');\n\t                        var wrappers = void 0,\n\t                            _newImages = void 0;\n\t                        temp.innerHTML = selectedHtml;\n\t\n\t                        wrappers = temp.getElementsByClassName('medium-editor-insert-images');\n\t                        _newImages = _utils2.default.getElementsByTagName(wrappers, 'img');\n\t\n\t                        Array.prototype.forEach.call(_newImages, function (image) {\n\t                            images.push(image);\n\t                        });\n\t                    }\n\t                }\n\t\n\t                if (images.length) {\n\t                    if (!selectedHtml) {\n\t                        e.preventDefault();\n\t                    }\n\t\n\t                    images.forEach(function (image) {\n\t                        var wrapper = _utils2.default.getClosestWithClassName(image, 'medium-editor-insert-images');\n\t                        _this6.deleteFile(image.src);\n\t\n\t                        image.parentNode.remove();\n\t\n\t                        // If wrapper has no images anymore, remove it\n\t                        if (wrapper.childElementCount === 0) {\n\t                            var next = wrapper.nextElementSibling,\n\t                                prev = wrapper.previousElementSibling;\n\t\n\t                            wrapper.remove();\n\t\n\t                            // If there is no selection, move cursor at the beginning of next paragraph (if delete is pressed),\n\t                            // or nove it at the end of previous paragraph (if backspace is pressed)\n\t                            if (!selectedHtml) {\n\t                                if (next || prev) {\n\t                                    if (next && e.which === MediumEditor.util.keyCode.DELETE || !prev) {\n\t                                        MediumEditor.selection.moveCursor(document, next, 0);\n\t                                    } else {\n\t                                        MediumEditor.selection.moveCursor(document, prev.lastChild, prev.lastChild.textContent.length);\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'deleteFile',\n\t        value: function deleteFile(image) {\n\t            if (this.options.deleteUrl) {\n\t                var xhr = new XMLHttpRequest(),\n\t                    data = Object.assign({}, {\n\t                    file: image\n\t                }, this.options.deleteData);\n\t\n\t                xhr.open(this.options.deleteMethod, this.options.deleteUrl, true);\n\t                xhr.send(data);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {}\n\t    }]);\n\t\n\t    return Images;\n\t}();\n\t\n\texports.default = Images;\n\tmodule.exports = exports['default'];\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// medium-editor-insert.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f52f042df82ecd31d0c3","import Core from './Core';\n\nconst MediumEditorInsert = MediumEditor.Extension.extend({\n    name: 'insert',\n\n    addons: {\n        images: true,\n        embeds: true\n    },\n\n    _initializedAddons: {},\n\n    init: function() {\n        MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n        this.core = new Core(this);\n    },\n\n    destroy: function() {\n        this.core.removeButtons();\n    },\n\n    getCore: function() {\n        return this.core;\n    },\n\n    getAddons: function () {\n        return this._initializedAddons;\n    },\n\n    getAddon: function(name) {\n        return this._initializedAddons[name];\n    }\n});\n\nexport default MediumEditorInsert;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Plugin.js","const utils = {\n    ucfirst: (str) => {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n\n    generateRandomString: (length = 15) => {\n        return Math.random().toString(36).substr(2, length);\n    },\n\n    getClosestWithClassName: (el, className) => {\n        return MediumEditor.util.traverseUp(el, (element) => {\n            return element.classList.contains(className);\n        });\n    },\n\n    isChildOf: (el, parent) => {\n        return MediumEditor.util.traverseUp(el, (element) => {\n            return element === parent;\n        }) ? true : false;\n    },\n\n    getElementsByClassName: (parents, className) => {\n        const results = [];\n\n        Array.prototype.forEach.call(parents, (editor) => {\n            const elements = editor.getElementsByClassName(className);\n\n            Array.prototype.forEach.call(elements, (element) => {\n                results.push(element);\n            });\n        });\n\n        return results;\n    },\n\n    getElementsByTagName: (parents, tagName) => {\n        const results = [];\n\n        Array.prototype.forEach.call(parents, (editor) => {\n            const elements = editor.getElementsByTagName(tagName);\n\n            Array.prototype.forEach.call(elements, (element) => {\n                results.push(element);\n            });\n        });\n\n        return results;\n    }\n};\n\nexport default utils;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils.js","import utils from './utils';\nimport Images from './addons/Images';\nimport Embeds from './addons/Embeds';\n\nexport default class Core {\n\n    constructor(plugin) {\n        this._plugin = plugin;\n        this._editor = this._plugin.base;\n\n        this.initAddons();\n        this.addButtons();\n        this.events();\n    }\n\n    events() {\n        let addonActions;\n\n        // This could be chained when medium-editor 5.15.2 is released\n        // https://github.com/yabwe/medium-editor/pull/1046\n        this._plugin.on(document, 'click', this.toggleButtons.bind(this));\n        this._plugin.on(document, 'keyup', this.toggleButtons.bind(this));\n        this._plugin.on(this.buttons.getElementsByClassName('medium-editor-insert-buttons-show')[0], 'click', this.toggleAddons.bind(this));\n\n        // This could be written in one statement when medium-editor 5.15.2 is released\n        // https://github.com/yabwe/medium-editor/pull/1046\n        addonActions = this.buttons.getElementsByClassName('medium-editor-insert-action');\n        Array.prototype.forEach.call(addonActions, (action) => {\n            this._plugin.on(action, 'click', this.handleAddonClick.bind(this));\n        });\n\n        this._plugin.on(window, 'resize', this.positionButtons.bind(this));\n    }\n\n    initAddons() {\n        // Initialize all default addons, we'll delete ones we don't need later\n        this._plugin._initializedAddons = {\n            images: new Images(this._plugin, this._plugin.addons.images),\n            embeds: new Embeds(this._plugin, this._plugin.addons.embeds)\n        };\n\n        Object.keys(this._plugin.addons).forEach((name) => {\n            const addonOptions = this._plugin.addons[name];\n\n            // If the addon is custom one\n            if (!this._plugin._initializedAddons[name]) {\n                if (typeof addonOptions === 'function') {\n                    this._plugin._initializedAddons[name] = new addonOptions(this._plugin);\n                } else {\n                    window.console.error(`I don't know how to initialize custom \"${name}\" addon!`);\n                }\n            }\n\n            // Delete disabled addon\n            if (!addonOptions) {\n                delete this._plugin._initializedAddons[name];\n            }\n        });\n    }\n\n    addButtons() {\n        const addons = this._plugin.getAddons();\n        let html;\n\n        this.buttons = document.createElement('div');\n        this.buttons.id = `medium-editor-insert-${this._plugin.getEditorId()}`;\n        this.buttons.classList.add('medium-editor-insert-buttons');\n        this.buttons.setAttribute('contentediable', false);\n\n        html = `<a class=\"medium-editor-insert-buttons-show\">+</a>\n            <ul class=\"medium-editor-insert-buttons-addons\">`;\n\n        Object.keys(addons).forEach((name) => {\n            const addon = addons[name];\n\n            html += `<li><a class=\"medium-editor-insert-action\" data-addon=\"${name}\">${addon.label}</a></li>`;\n        });\n\n        html += `</ul>`;\n\n        this.buttons.innerHTML = html;\n\n        document.body.appendChild(this.buttons);\n    }\n\n    removeButtons() {\n        this.buttons.remove();\n    }\n\n    positionButtons() {\n        let el, elPosition, addons, addonButton, addonsStyle, addonButtonStyle, position;\n\n        // Don't position buttons if they aren't active\n        if (this.buttons.classList.contains('medium-editor-insert-buttons-active') === false) {\n            return;\n        }\n\n        el = this._editor.getSelectedParentElement();\n        elPosition = el.getBoundingClientRect();\n        addons = this.buttons.getElementsByClassName('medium-editor-insert-buttons-addons')[0];\n        addonButton = this.buttons.getElementsByClassName('medium-editor-insert-action')[0];\n        addonsStyle = window.getComputedStyle(addons);\n        addonButtonStyle = window.getComputedStyle(addonButton);\n\n        // Calculate position\n        position = {\n            top: window.scrollY + elPosition.top,\n            left: window.scrollX + elPosition.left - parseInt(addonsStyle.left, 10) - parseInt(addonButtonStyle.marginLeft, 10)\n        };\n\n        // If left position is lower than 0, the buttons would be out of the viewport.\n        // In that case, align buttons with the editor\n        position.left = position.left < 0 ? elPosition.left : position.left;\n\n        this.buttons.style.left = `${position.left}px`;\n        this.buttons.style.top = `${position.top}px`;\n    }\n\n    toggleButtons() {\n        const el = this._editor.getSelectedParentElement();\n\n        if (this.shouldDisplayButtonsOnElement(el)) {\n            this.selectElement(el);\n            this.showButtons();\n        } else {\n            this.hideButtons();\n        }\n    }\n\n    shouldDisplayButtonsOnElement(el) {\n        const addons = this._plugin.getAddons(),\n            addonClassNames = [];\n        let isAddon = false,\n            belongsToEditor = false;\n\n        // Don't show buttons when the element has text\n        if (el.innerText.trim() !== '') {\n            return false;\n        }\n\n        // Don't show buttons when the editor doesn't belong to editor\n        this._plugin.getEditorElements().forEach((editor) => {\n            if (utils.isChildOf(el, editor)) {\n                belongsToEditor = true;\n                return;\n            }\n        });\n\n        if (!belongsToEditor) {\n            return false;\n        }\n\n        // Get class names used by addons\n        Object.keys(addons).forEach((addonName) => {\n            const addon = addons[addonName];\n            if (addon.elementClassName) {\n                addonClassNames.push(addon.elementClassName);\n            }\n        });\n\n        // Don't show buttons if the element is an addon element\n        // - when the element has an addon class, or some of its parents have it\n        addonClassNames.forEach((className) => {\n            if (el.classList.contains(className) || utils.getClosestWithClassName(el, className)) {\n                isAddon = true;\n                return;\n            }\n        });\n\n        return !isAddon;\n    }\n\n    selectElement(el) {\n        this.selectedElement = el;\n    }\n\n    showButtons() {\n        this.buttons.classList.add('medium-editor-insert-buttons-active');\n        this.positionButtons();\n    }\n\n    hideButtons() {\n        this.buttons.classList.remove('medium-editor-insert-buttons-active');\n        this.buttons.classList.remove('medium-editor-insert-addons-active');\n    }\n\n    toggleAddons() {\n        this.buttons.classList.toggle('medium-editor-insert-addons-active');\n    }\n\n    handleAddonClick(e) {\n        const name = e.currentTarget.getAttribute('data-addon');\n\n        e.preventDefault();\n\n        this._plugin.getAddon(name).handleClick(e);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Core.js","import utils from './utils';\nimport ToolbarButton from './ToolbarButton';\n\nconst MediumEditorToolbar = MediumEditor.extensions.toolbar;\n\nexport default class Toolbar extends MediumEditorToolbar {\n\n    constructor(options) {\n        super(options);\n\n        this.name = `${options.type}Toolbar`;\n\n        options.buttons.forEach((buttonOptions) => {\n            const button = new ToolbarButton(Object.assign({}, {\n                window: this.plugin.window,\n                document: this.plugin.document,\n                base: this.plugin.base\n            }, buttonOptions));\n\n            button.init();\n            this.plugin.base.extensions.push(button);\n        });\n\n        this.window = options.plugin.window;\n        this.document = options.plugin.document;\n        this.base = options.plugin.base;\n\n        this.init();\n    }\n\n    createToolbar() {\n        const toolbar = this.document.createElement('div');\n\n        toolbar.id = `medium-editor-insert-${this.type}-toolbar-${this.getEditorId()}`;\n        toolbar.className = 'medium-editor-toolbar';\n\n        if (this.static) {\n            toolbar.className += ' static-toolbar';\n        } else if (this.relativeContainer) {\n            toolbar.className += ' medium-editor-relative-toolbar';\n        } else {\n            toolbar.className += ' medium-editor-stalker-toolbar';\n        }\n\n        toolbar.appendChild(this.createToolbarButtons());\n\n        // Add any forms that extensions may have\n        this.forEachExtension((extension) => {\n            if (extension.hasForm) {\n                toolbar.appendChild(extension.getForm());\n            }\n        });\n\n        this.attachEventHandlers();\n\n        return toolbar;\n    }\n\n    createToolbarButtons() {\n        const ul = this.document.createElement('ul');\n        let li,\n            btn,\n            buttons,\n            extension,\n            buttonName,\n            buttonOpts;\n\n        ul.id = `medium-editor-insert-${this.type}-toolbar-actions${this.getEditorId()}`;\n        ul.className = 'medium-editor-toolbar-actions';\n        ul.style.display = 'block';\n\n        this.buttons.forEach((button) => {\n            if (typeof button === 'string') {\n                buttonName = button;\n                buttonOpts = null;\n            } else {\n                buttonName = button.name;\n                buttonOpts = button;\n            }\n\n            // If the button already exists as an extension, it'll be returned\n            // othwerise it'll create the default built-in button\n            extension = this.base.addBuiltInExtension(buttonName, buttonOpts);\n\n            if (extension && typeof extension.getButton === 'function') {\n                btn = extension.getButton(this.base);\n                li = this.document.createElement('li');\n                if (MediumEditor.util.isElement(btn)) {\n                    li.appendChild(btn);\n                } else {\n                    li.innerHTML = btn;\n                }\n                ul.appendChild(li);\n            }\n        }, this);\n\n        buttons = ul.querySelectorAll('button');\n        if (buttons.length > 0) {\n            buttons[0].classList.add(this.firstButtonClass);\n            buttons[buttons.length - 1].classList.add(this.lastButtonClass);\n        }\n\n        return ul;\n    }\n\n    checkState() {\n        let activeElements;\n\n        if (this.base.preventSelectionUpdates) {\n            return;\n        }\n\n        // Wait for elements to be selected\n        setTimeout(() => {\n            activeElements = utils.getElementsByClassName(this.getEditorElements(), this.activeClassName);\n\n            // Hide toolbar when no elements are selected\n            if (activeElements.length === 0) {\n                return this.hideToolbar();\n            }\n\n            // Now we know there's a focused editable with a selection\n            this.showAndUpdateToolbar();\n        }, 10);\n    }\n\n    setToolbarPosition() {\n        const container = utils.getElementsByClassName(this.getEditorElements(), this.activeClassName)[0];\n        let anchorPreview;\n\n        // If there isn't a valid selection, bail\n        if (!container) {\n            return this;\n        }\n\n        this.showToolbar();\n        this.positionStaticToolbar(container);\n\n        anchorPreview = this.base.getExtensionByName('anchor-preview');\n\n        if (anchorPreview && typeof anchorPreview.hidePreview === 'function') {\n            anchorPreview.hidePreview();\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Toolbar.js","const ToolbarButton = MediumEditor.extensions.button.extend({\n    init: function() {\n        this.button = this.document.createElement('button');\n        this.button.classList.add('medium-editor-action');\n        this.button.innerHTML = `<b>${this.label}</b>`;\n\n        this.on(this.button, 'click', this.handleClick.bind(this));\n    },\n\n    getButton: function() {\n      return this.button;\n    },\n\n    handleClick: function() {\n        this.onClick();\n    }\n});\n\nexport default ToolbarButton;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ToolbarButton.js","export default class Embeds {\n\n\tconstructor(plugin, options) {\n\t\tthis._plugin = plugin;\n\t      this._editor = this._plugin.base;\n\n\t\tthis.options = {\n\t\t\tlabel: '<span class=\"fa fa-youtube-play\"></span>',\n\t\t\tplaceholder: 'Paste a YouTube, Vimeo, Facebook, Twitter or Instagram link and press Enter',\n      oembedProxy: 'http://medium.iframe.ly/api/oembed?iframe=1',\n      captions: true, \n      captionPlaceholder: 'Type caption (optional)',\n      storeMeta: false,\n      styles: {\n        wide: {\n          label: '<span class=\"fa fa-align-justify\"></span>'\n          // added: function ($el) {},\n          // removed: function ($el) {}\n        },\n        left: {\n          label: '<span class=\"fa fa-align-left\"></span>'\n          // added: function ($el) {},\n          // removed: function ($el) {}\n        },\n        right: {\n          label: '<span class=\"fa fa-align-right\"></span>'\n          // added: function ($el) {},\n          // removed: function ($el) {}\n        }\n      },\n      actions: {\n        remove: {\n          label: '<span class=\"fa fa-times\"></span>',\n          clicked: function () {\n            // var $event = $.Event('keydown');\n\n            // $event.which = 8;\n            // $(document).trigger($event);\n          }\n        }\n      },\n      parseOnPaste: false\n   \t};\n\n\t\tObject.assign(this.options, options);\n\n\t\tthis.label = this.options.label;\n\t}\n\n\thandleClick() {\n    this.el = this._plugin.getCore().selectedElement;\n    this.el.classList.add('medium-editor-insert-embeds-active');\n    this.el.classList.add('medium-editor-insert-embeds-placeholder');\n    this.el.setAttribute('data-placeholder', this.options.placeholder);\n\n    this.instanceHandlePaste = this.handlePaste.bind(this);\n    this.instanceHandleKeyDown = this.handleKeyDown.bind(this);\n\n    this._plugin.on(document, 'paste', this.instanceHandlePaste);\n    this._plugin.on(document, 'keydown', this.instanceHandleKeyDown);\n    this._plugin.on(this.el, 'blur', this.handleBlur.bind(this));\n\n\n\t\tthis._plugin.getCore().hideButtons();\n\n    // return focus to element, allow user to cancel embed by start writing\n    this._editor.elements[0].focus();\n    this.el.focus();\n\n    // this._editor.selectElement(this.el);\n    // console.log( this._editor.selection );\n\t}\n\n\thandleKeyDown(evt) {\n\t\tif (evt.which !== 17 && evt.which !== 91 && evt.which !== 224   // Cmd or Ctrl pressed (user probably preparing to paste url via hot keys)\n      && (evt.which === 27 || this._plugin.selectedElement !== this.el)\n    ) {\n      // Escape\n      this.cancelEmbed();\n      return false;\n\t\t}\n    return true;\n\t}\n\n\thandlePaste(evt) {\n\t\tconst pastedUrl = evt.clipboardData.getData('text');\n    const linkRegEx = new RegExp('^(http(s?):)?\\/\\/','i');\n\n    if (linkRegEx.test(pastedUrl)) {\n      const html = this.parseUrl(pastedUrl, true);\n      console.log('yes!', html);\n        // if (this.options.oembedProxy) {\n        //     this.oembed(pastedUrl, true);\n        // } else {\n        //     this.parseUrl(pastedUrl, true);\n        // }\n    }\n\n\t\tconsole.log('paste!');\n\t\t// console.log( pastedUrl ); \n    this.cancelEmbed();\n\t}\n\n   /**\n     * Get HTML using regexp\n     *\n     * @param {string} url\n     * @param {bool} pasted\n     * @return {void}\n     */\n\n  parseUrl(url, pasted) {\n\t\tlet html;\n\n    if (!(new RegExp(['youtube', 'youtu.be', 'vimeo', 'instagram', 'twitter', 'facebook'].join('|')).test(url))) {\n      // $.proxy(this, 'convertBadEmbed', url)();\n      return false;\n    }\n\n    html = url.replace(/\\n?/g, '')\n      .replace(/^((http(s)?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/(watch\\?v=|v\\/)?)([a-zA-Z0-9\\-_]+)(.*)?$/, '<div class=\"video video-youtube\"><iframe width=\"420\" height=\"315\" src=\"//www.youtube.com/embed/$7\" frameborder=\"0\" allowfullscreen></iframe></div>')\n      .replace(/^https?:\\/\\/vimeo\\.com(\\/.+)?\\/([0-9]+)$/, '<div class=\"video video-vimeo\"><iframe src=\"//player.vimeo.com/video/$2\" width=\"500\" height=\"281\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></div>')\n      .replace(/^https:\\/\\/twitter\\.com\\/(\\w+)\\/status\\/(\\d+)\\/?$/, '<blockquote class=\"twitter-tweet\" align=\"center\" lang=\"en\"><a href=\"https://twitter.com/$1/statuses/$2\"></a></blockquote><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>')\n      .replace(/^(https:\\/\\/www\\.facebook\\.com\\/(.*))$/, '<script src=\"//connect.facebook.net/en_US/sdk.js#xfbml=1&amp;version=v2.2\" async></script><div class=\"fb-post\" data-href=\"$1\"><div class=\"fb-xfbml-parse-ignore\"><a href=\"$1\">Loading Facebook post...</a></div></div>')\n      .replace(/^https?:\\/\\/instagram\\.com\\/p\\/(.+)\\/?$/, '<span class=\"instagram\"><iframe src=\"//instagram.com/p/$1/embed/\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe></span>');\n\n    if ((/<(\"[^\"]*\"|'[^']*'|[^'\">])*>/).test(html) === false) {\n      // $.proxy(this, 'convertBadEmbed', url)();\n      return false;\n    }\n\n\n    if (pasted) {\n      return this.embed(html, url);\n    } else {\n      return this.embed(html);\n    }\n  };\n\n\n    /**\n     * Add html to page\n     *\n     * @param {string} html\n     * @param {string} pastedUrl\n     * @return {void}\n     */\n\n  embed(html, pastedUrl) {\n    let el, figure, figureCaption, metacontainer, container, overlay;\n\n    if (!html) {\n      console.error('Incorrect URL format specified: ', pastedUrl);\n      return false;\n    } \n\n    el = this._plugin.getCore().selectedElement;\n    figure = document.createElement('figure');\n    figure.classList.add('medium-editor-insert-embed');\n    figureCaption = document.createElement('figcaption');\n    figureCaption.classList.add('medium-editor-insert-embed-caption');\n    figureCaption.setAttribute('contenteditable', true);\n    figureCaption.setAttribute('data-placeholder', 'Type caption for embed (optional)');\n\n    metacontainer = document.createElement('div');\n    metacontainer.classList.add('medium-editor-insert-embeds');\n    metacontainer.setAttribute('contenteditable', false);\n\n    container = document.createElement('div');\n    container.classList.add('medium-editor-insert-embed-container');\n\n    overlay = document.createElement('div');\n    overlay.classList.add('medium-editor-insert-embeds-overlay');\n\n    metacontainer.appendChild(figure);\n    metacontainer.appendChild(overlay);\n    figure.appendChild(container);\n\n    \n    el.replaceWith(metacontainer);\n\n\n    container.innerHTML = html;\n\n\n    console.log(html);\n    // this.core.triggerInput();\n\n    if (html.indexOf('facebook') !== -1) {\n        if (typeof (FB) !== 'undefined') {\n            setTimeout(function () {\n                FB.XFBML.parse();\n            }, 2000);\n        }\n    }\n\n    return true;\n\t}\n\n  handleBlur() {\n    console.log('blur');\n    // this.cancelEmbed();\n  }\n\n  hidePlaceholder() {\n    this.el.removeAttribute('data-placeholder');\n    this.el.classList.remove('medium-editor-insert-embeds-placeholder');\n  }\n\n  cancelEmbed() {\n    this.hidePlaceholder();\n    this.el.classList.remove('medium-editor-insert-embeds-active');\n\n    this._plugin.off(document, 'paste', this.instanceHandlePaste);\n    this._plugin.off(document, 'keyup', this.instanceHandleKeyUp);\n\t}\n\n  destroy() {\n    this.cancelEmbed();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/addons/Embeds.js","import utils from '../utils';\nimport Toolbar from '../Toolbar';\n\nexport default class Images {\n\n\tconstructor(plugin, options) {\n\t\tthis.options = {\n\t\t\tlabel: '<span class=\"fa fa-camera\"></span>',\n\t\t\tpreview: true,\n\t\t\tuploadUrl: 'upload.php',\n            deleteUrl: 'delete.php',\n            deleteMethod: 'DELETE',\n            deleteData: {}\n\t\t};\n\n\t\tObject.assign(this.options, options);\n\n        this._plugin = plugin;\n        this._editor = this._plugin.base;\n        this.elementClassName = 'medium-editor-insert-images';\n        this.loadingClassName = 'medium-editor-insert-images-loading';\n        this.activeClassName = 'medium-editor-insert-image-active';\n        this.descriptionContainerClassName = 'medium-editor-embed-image-description-container';\n        this.descriptionClassName = 'medium-editor-embed-image-description';\n\t\tthis.label = this.options.label;\n        this.descriptionPlaceholder = this.options.descriptionPlaceholder;\n\n        this.initToolbar();\n        this.events();\n\t}\n\n    events() {\n        this._plugin.on(document, 'click', this.unselectImage.bind(this));\n        this._plugin.on(document, 'keydown', this.removeImage.bind(this));\n\n        this._plugin.getEditorElements().forEach((editor) => {\n            this._plugin.on(editor, 'click', this.selectImage.bind(this));\n        });\n    }\n\n\thandleClick() {\n        if (this.options.onInsertButtonClick) {\n            const uid = utils.generateRandomString();\n            this.options.onInsertButtonClick(\n                (imageUrl) => this.insertImage(imageUrl, uid),\n                (imageUrl) => this.insertImage(imageUrl, uid, true)\n            );\n        } else {\n            this._input = document.createElement('input');\n            this._input.type = 'file';\n            this._input.multiple = true;\n            this._plugin.on(this._input, 'change', this.uploadFiles.bind(this));\n\n            this._input.click();\n        }\n\t}\n\n    initToolbar() {\n        this.toolbar = new Toolbar({\n            plugin: this._plugin,\n            type: 'images',\n            activeClassName: this.activeClassName,\n            buttons: [\n                {\n                    name: 'align-left',\n                    action: 'left',\n                    label: 'Left',\n                    onClick: (function() {\n                        this.changeAlign('align-left');\n                    }).bind(this),\n                },\n                {\n                    name: 'align-center',\n                    action: 'center',\n                    label: 'Center',\n                    onClick: (function() {\n                        this.changeAlign('align-center');\n                    }).bind(this),\n                },\n                {\n                    name: 'align-right',\n                    action: 'right',\n                    label: 'Right',\n                    onClick: (function() {\n                        this.changeAlign('align-right');\n                    }).bind(this),\n                },\n                {\n                    name: 'align-center-full',\n                    action: 'center-full',\n                    label: 'Center Full',\n                    onClick: (function() {\n                        this.changeAlign('align-center-full');\n                    }).bind(this),\n                },\n            ]\n        });\n\n        this._editor.extensions.push(this.toolbar);\n    }\n\n    changeAlign(className) {\n        const el = this._plugin.getCore().selectedElement;\n        el.classList.remove('align-left', 'align-center', 'align-right', 'align-center-full');\n        el.classList.add(className);\n    }\n\n\tuploadFiles() {\n\t\tArray.prototype.forEach.call(this._input.files, (file) => {\n            // Generate uid for this image, so we can identify it later\n            // and we can replace preview image with uploaded one\n\t\t\tconst uid = utils.generateRandomString();\n\n\t\t\tif (this.options.preview) {\n\t\t\t\tthis.preview(file, uid);\n\t\t\t}\n\n\t\t\tthis.upload(file, uid);\n\t\t});\n\t}\n\n\tpreview(file, uid) {\n\t\tconst reader = new FileReader();\n\n\t\treader.onload = (e) => {\n\t\t\tthis.insertImage(e.target.result, uid);\n\t\t};\n\n\t\treader.readAsDataURL(file);\n\t}\n\n\tupload(file, uid) {\n\t\tconst xhr = new XMLHttpRequest(),\n\t\t\tdata = new FormData();\n        const insertImage = this.insertImage.bind(this);\n\n\t\txhr.open(\"POST\", this.options.uploadUrl, true);\n\t\txhr.onreadystatechange = () => {\n            if (xhr.readyState === 4 && xhr.status === 200) {\n                insertImage(xhr.responseText, utils.generateRandomString());\n            }\n\t\t};\n\n\t\tdata.append(\"file\", file);\n\t\txhr.send(data);\n\t}\n\n    insertImage(imageUrl, uid, isLoader) {\n        const paragraph = this._plugin.getCore().selectedElement;\n\n          // Replace paragraph with div, because figure is a block element\n          // and can't be nested inside paragraphs\n        if (paragraph.nodeName.toLowerCase() === 'p') {\n            const div = document.createElement('div');\n\n            paragraph.parentNode.insertBefore(div, paragraph);\n            this._plugin.getCore().selectElement(div);\n            paragraph.remove();\n        }\n        const image = this._plugin.getCore().selectedElement.querySelector(`[data-uid=\"${uid}\"]`);\n\n        if (image) {\n            this.replaceImage(image, imageUrl, isLoader);\n        } else {\n            this.addImage(imageUrl, uid, isLoader);\n        }\n\n        this._plugin.getCore().hideButtons();\n    }\n\n    addImage(url, uid, isLoader) {\n        const el = this._plugin.getCore().selectedElement,\n            figure = document.createElement('figure'),\n            img = document.createElement('img'),\n            descriptionContainer = document.createElement('div'),\n            description = document.createElement('figcaption');\n\n        let domImage;\n\n        img.alt = '';\n\n        if (uid) {\n            img.setAttribute('data-uid', uid);\n        }\n\n        descriptionContainer.classList.add(this.descriptionContainerClassName);\n        description.contentEditable = true;\n        description.classList.add(this.descriptionClassName);\n        description.dataset.placeholder = this.descriptionPlaceholder;\n\n        // If we're dealing with a preview image,\n        // we don't have to preload it before displaying\n        if (url.match(/^data:/)) {\n            img.src = url;\n            figure.appendChild(img);\n            el.appendChild(figure);\n        } else {\n            domImage = new Image();\n            domImage.onload = () => {\n                img.src = domImage.src;\n                figure.appendChild(img);\n                descriptionContainer.appendChild(description);\n                figure.appendChild(descriptionContainer);\n                el.appendChild(figure);\n            };\n            domImage.src = url;\n            if (isLoader) el.classList.add(this.loadingClassName);\n        }\n\n        el.classList.add(this.elementClassName);\n        el.contentEditable = false;\n        el.classList.add('align-center');\n\n\n        // Return domImage so we can test this function easily\n        return domImage;\n    }\n\n    replaceImage(image, url, isLoader) {\n        const domImage = new Image();\n        const el = this._plugin.getCore().selectedElement;\n\n        if (!isLoader) el.classList.remove(this.loadingClassName);\n\n        domImage.onload = () => {\n            image.src = domImage.src;\n            image.removeAttribute('data-uid');\n        };\n\n        domImage.src = url;\n\n        // Return domImage so we can test this function easily\n        return domImage;\n    }\n\n    selectImage(e) {\n        const el = e.target;\n\n        if (el.nodeName.toLowerCase() === 'img' && utils.getClosestWithClassName(el, this.elementClassName)) {\n            const parentNode = el.parentNode.parentNode;\n\n            if (!parentNode.classList.contains(this.loadingClassName)) {\n                el.classList.add(this.activeClassName);\n                parentNode.classList.add(this.activeClassName);\n\n                this._editor.selectElement(el);\n            }\n        }\n    }\n\n    unselectImage(e) {\n        const el = e.target;\n        let clickedImage, images;\n\n        if (el.classList.contains(this.descriptionClassName)) return false;\n\n        // Unselect all selected images. If an image is clicked, unselect all except this one.\n        if (el.nodeName.toLowerCase() === 'img' && el.classList.contains(this.activeClassName)) {\n            clickedImage = el;\n        }\n\n        images = utils.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName);\n        Array.prototype.forEach.call(images, (image) => {\n            if (image !== clickedImage) {\n                image.classList.remove(this.activeClassName);\n            }\n        });\n    }\n\n    removeImage(e) {\n        if ([MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.DELETE].indexOf(e.which) > -1) {\n            const images = utils.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName),\n                selection = window.getSelection();\n            let selectedHtml;\n\n            // Remove image even if it's not selected, but backspace/del is pressed in text\n            if (selection && selection.rangeCount) {\n                const range = MediumEditor.selection.getSelectionRange(document),\n                    focusedElement = MediumEditor.selection.getSelectedParentElement(range),\n                    caretPosition = MediumEditor.selection.getCaretOffsets(focusedElement).left;\n                let sibling;\n\n                // Is backspace pressed and caret is at the beginning of a paragraph, get previous element\n                if (e.which === MediumEditor.util.keyCode.BACKSPACE && caretPosition === 0) {\n                    sibling = focusedElement.previousElementSibling;\n                // Is del pressed and caret is at the end of a paragraph, get next element\n                } else if (e.which === MediumEditor.util.keyCode.DELETE && caretPosition === focusedElement.innerText.length) {\n                    sibling = focusedElement.nextElementSibling;\n                }\n\n                if (sibling && sibling.classList.contains('medium-editor-insert-images')) {\n                    const newImages = sibling.getElementsByTagName('img');\n                    Array.prototype.forEach.call(newImages, (image) => {\n                        images.push(image);\n                    });\n                }\n\n                // If text is selected, find images in the selection\n                selectedHtml = MediumEditor.selection.getSelectionHtml(document);\n                if (selectedHtml) {\n                    const temp = document.createElement('div');\n                    let wrappers, newImages;\n                    temp.innerHTML = selectedHtml;\n\n                    wrappers = temp.getElementsByClassName('medium-editor-insert-images');\n                    newImages = utils.getElementsByTagName(wrappers, 'img');\n\n                    Array.prototype.forEach.call(newImages, (image) => {\n                        images.push(image);\n                    });\n                }\n            }\n\n            if (images.length) {\n                if (!selectedHtml) {\n                    e.preventDefault();\n                }\n\n                images.forEach((image) => {\n                    const wrapper = utils.getClosestWithClassName(image, 'medium-editor-insert-images');\n                    this.deleteFile(image.src);\n\n                    image.parentNode.remove();\n\n                    // If wrapper has no images anymore, remove it\n                    if (wrapper.childElementCount === 0) {\n                        const next = wrapper.nextElementSibling,\n                            prev = wrapper.previousElementSibling;\n\n                        wrapper.remove();\n\n                        // If there is no selection, move cursor at the beginning of next paragraph (if delete is pressed),\n                        // or nove it at the end of previous paragraph (if backspace is pressed)\n                        if (!selectedHtml) {\n                            if (next || prev) {\n                                if ((next && e.which === MediumEditor.util.keyCode.DELETE) || !prev) {\n                                    MediumEditor.selection.moveCursor(document, next, 0);\n                                } else {\n                                    MediumEditor.selection.moveCursor(document, prev.lastChild, prev.lastChild.textContent.length);\n                                }\n                            }\n                        }\n                    }\n                });\n            }\n        }\n    }\n\n    deleteFile(image) {\n        if (this.options.deleteUrl) {\n            const xhr = new XMLHttpRequest(),\n                data = Object.assign({}, {\n                    file: image\n                }, this.options.deleteData);\n\n            xhr.open(this.options.deleteMethod, this.options.deleteUrl, true);\n            xhr.send(data);\n        }\n    }\n\n    destroy() {\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/addons/Images.js"],"sourceRoot":""}